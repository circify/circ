#include "{fn}.h"
#include "../../../abycore/circuit/booleancircuits.h"
#include "../../../abycore/circuit/arithmeticcircuits.h"
#include "../../../abycore/circuit/circuit.h"
#include "../../../../../../EZPC/ezpc.h"

#include "../../../abycore/sharing/sharing.h"

int32_t test_{fn}_circuit(std::map<std::string, std::string> params, e_role role, const std::string& address, 
	uint16_t port, seclvl seclvl, uint32_t bitlen, uint32_t nthreads, e_mt_gen_alg mt_alg, e_sharing sharing) {

	// setup
	ABYParty* party = new ABYParty(role, address, port, seclvl, bitlen, nthreads, mt_alg);
	std::vector<Sharing*>& sharings = party->GetSharings();
	Circuit* acirc = sharings[S_ARITH]->GetCircuitBuildRoutine();
	Circuit* bcirc = sharings[S_BOOL]->GetCircuitBuildRoutine();
	Circuit* ycirc = sharings[S_YAO]->GetCircuitBuildRoutine();
	output_queue out_q;
	
	// compiled circuit
	{circ}

	party->ExecCircuit();
	flush_output_queue(out_q, role, bitlen);
	delete party;
	return 0;
}
